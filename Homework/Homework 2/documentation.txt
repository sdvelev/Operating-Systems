Документация на Домашно №2 по Операционни системи

- Процес на решение на задачата:

1. Проверка за правилен брой аргументи (точно един) 
2. Отваряне на подадената програма само за четене (с open(2))
2.1. При всякакви последващи настъпили грешки се счита, че не е необходимо файловият дескриптор да бъде затварян явно, тъй като err задейства това при терминиране на програмата
3. Декларация на stat структура
4. Прилагане на функцията fstat(2)
5. Проверка за правилен размер на файла
6. Дефиниране на променлива за общия броя инструкции
7. Прочитане и верифициране на магическата дума ORC
8. Прочитане на числото ram_size
9. Алокиране на желаното количество динамична памет
10. Дефиниране на структура, в която да се четат инструкции
11. Циклично прочитане на всяка поредна инструкция
12. Предприемане на различни действия спрямо opcode-а на инструкцията
12.1. Инструкцията nop не прави нищо
12.2. Инструкцията set се обръща към setFunction
12.3. Инструкцията load се обръща към loadFunction
12.4. Инструкцията store се обръща към storeFunction
12.5. Инструкцията jmp се обръща към jmpFunction
12.5.1. Проверка за валиден адрес на инструкция (да не превишава броя на инструкциите)
12.6. Инструкцията sgz се обръща към sgzFunction
12.7. Инструкцията add се обръща към addFunction
12.8. Инструкцията mul се обръща към mulFunction
12.9. Инструкцията div се обръща към divFunction
12.9.1 Проверка за за делене на нула
12.10. Инструкцията mod се обръща към modFunction
12.10.1 Проверка за делене на нула
12.*. Проверка за валидни адреси върху заделената динамично памет
12.11. Инструкцията out се обръща към outFunction
12.12. Инструкцията sleep се обръща към sleepFunction
12.12.1 Преобръщане на дадените милисекунди в секунди и наносекунди (използване на nanosleep(2))
12.13. Освобождаване на динамично заделената памет при настъпване на грешки
13. Затваряне на файловия дескриптор за работа с подадената програма
14. Освобождаване на динамично заделената памет в края на програмата или при настъпване на грешки

- Exit Status:

0. Успешно завършване на програмата
1. Липса на достатъчно пададени аргументи на програмата - точно един
2. Невъзможност за отваряне на файл (грешка в open(2))
3. Невъзможност за извлличане на допълнителна информация за файл (грешка във fstat(2))
4. Невъзможност за четене от файл (грешка в read(2))
5. Грешка в прочитането на достатъчно байтове (три) от магическата дума във файла (прочитане на по-малко от предварително зададените)
6. Грешна магическа дума
7. Грешка в прочитането на достатъчно байтове (четири) от ram_size във файла (прочитане на по-малко от предварително зададените) 
8. Некоректно обособена структура на програмата (неправилна големина на файла)
9. Грешка в прочитането на достатъчно байтове (осем) от operands във файла (прочитане на по-малко от предварително зададените) 
10. Невалиден opcode ("номер" на инструкция) 
11. Невалидна инструкция (невалиден адрес)
12. Невъзможност за отместване на курсора във файл (грешка в lseek(2))
13. Грешка при опит за делене на 0
14. Невъзможност за блокиране на изпълнението на програмата за определено време (грешка в nanosleep(2))
15. Невъзможност за успешно заделяне на достатъчно байтове (грешка в malloc(3))
16. Невалиден адрес на инструкция
 
- Използвани източници:

[1] https://www.codevscolor.com/c-nanosleep-example
[2] man pages
